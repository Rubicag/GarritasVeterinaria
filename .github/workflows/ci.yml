name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build and test (21)
    runs-on: ubuntu-latest
    strategy:
      name: CI

      on:
        push:
          branches: [ main, master ]
          tags: [ 'v*' ]
        pull_request:
          branches: [ main, master ]

      jobs:
        build:
          name: Build and test (21)
          runs-on: ubuntu-latest
          strategy:
            matrix:
              java: [21]

          steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up JDK ${{ matrix.java }}
              uses: actions/setup-java@v4
              with:
                distribution: temurin
                java-version: ${{ matrix.java }}
                cache: maven

            - name: Cache Maven local repository
              uses: actions/cache@v4
              with:
                path: ~/.m2/repository
                key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                restore-keys: |
                  ${{ runner.os }}-m2-

            - name: Make mvnw executable
              run: chmod +x mvnw || true

            - name: Build (tests + package)
              run: ./mvnw -B -U clean package

            - name: Generate JaCoCo report
              run: ./mvnw -B org.jacoco:jacoco-maven-plugin:report

            - name: Upload WAR artifact
              uses: actions/upload-artifact@v4
              with:
                name: GarritasVeterinaria-war
                path: target/*.war

            - name: Upload JaCoCo HTML report
              uses: actions/upload-artifact@v4
              with:
                name: jacoco-report
                path: target/site/jacoco

        release:
          name: Create GitHub Release from tag
          runs-on: ubuntu-latest
          needs: build
          if: startsWith(github.ref, 'refs/tags/v')

          steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Verify tag version equals pom.version
              id: verify
              run: |
                TAG=${GITHUB_REF#refs/tags/}
                echo "Tag: $TAG"
                VERSION=$(./mvnw -q -DforceStdout help:evaluate -Dexpression=project.version)
                echo "POM version: $VERSION"
                if [ "$TAG" != "v$VERSION" ]; then
                  echo "Tag ($TAG) does not match pom.version (v$VERSION)" >&2
                  exit 1
                fi

            - name: Find WAR
              id: findwar
              run: |
                WAR=$(ls target/*.war | head -n 1 || true)
                if [ -z "$WAR" ]; then
                  echo "No WAR found in target/" >&2
                  exit 1
                fi
                echo "war_path=$WAR" >> $GITHUB_OUTPUT

            - name: Create Release
              uses: ncipollo/release-action@v1
              with:
                tag: ${{ github.ref_name }}
                name: Release ${{ github.ref_name }}
                body: Automated release for ${{ github.ref_name }}

            - name: Upload WAR to Release
              uses: softprops/action-gh-release@v1
              with:
                files: ${{ steps.findwar.outputs.war_path }}
